@page "/"
@layout LoginLayout
@rendermode InteractiveServer

@using BlazorApp.Components.Layout;
@inject NavigationManager _navigationManager
@inject AuthService _authService // Injeção do AuthService para autenticação no banco de dados

<PageTitle>Login</PageTitle>

@if (!lastLoginAttemptSucessfull) {
    <div class="alert alert-danger" role="alert">
            Credenciais inválidas! Numero de tentativas até agora: #@tentativas
    </div>
}
@if (!lastRegisterAttemptSucessfull) {
    <div class="alert alert-danger" role="alert">
            Conta não registrada! Já existe uma conta com esse Username
    </div>
}

<h1>Taskerr Login</h1>

Faça Login abaixo para acessar suas tarefas. <p />

Username<p />
<input @bind="inUsername" /> <p />

Senha<p />
<input type="password" @bind="inPassword" /> <p /> <p />

<button @onclick="tryLogin">Fazer Login</button>
<button @onclick="tryRegister">Criar Conta</button>





@code {
    string inUsername = "";
    string inPassword = "";
    bool lastLoginAttemptSucessfull = true;
    bool lastRegisterAttemptSucessfull = true;
    int tentativas = 0;

    // Método chamado ao tentar fazer login
    async void tryRegister() {
        var curUser = await _authService.Register(inUsername, inPassword);

        if (curUser != null) {
            Auth.isAuthd = true;
            Auth.curUser = curUser;

            // Navegue para a página principal após o login bem-sucedido
            _navigationManager.NavigateTo("/home");
        }
        else {
            lastRegisterAttemptSucessfull = false; 
            tentativas++;
            StateHasChanged();
        }
    }

    async Task tryLogin()
    {
        var usuario = await _authService.Login(inUsername, inPassword);

        if (usuario != null)
        {
            // Se a autenticação for bem-sucedida, armazene o estado de login
            Auth.isAuthd = true;
            Auth.curUser = usuario;

            // Navegue para a página principal após o login bem-sucedido
            _navigationManager.NavigateTo("/home");
        }
        else
        {
            // Caso as credenciais estejam incorretas
            lastLoginAttemptSucessfull = false;
            tentativas++;
            StateHasChanged();
        }
    }

    protected override async Task OnInitializedAsync()
    {
        // Definir o estado inicial de autenticação
        Auth.isAuthd = false;
    }
}